View(tble2)
pivot_wider()
?pivot_wider
tble2 %>% pivot_wider(cols=c('Coordinate', 'value'),
names_from=Coordinate,
values_from=value)
tble2 %>% pivot_wider(names_from=Coordinate,
values_from=value)
tble2 = pivot_longer(tble,
cols=everything(),
names_sep='_',
values_to='value',
names_to=c('Group', 'Group No', 'Coordinate')) %>%
select(-Group)
tble2 %>% pivot_wider(names_from=Coordinate,
values_from=value)
tble2 %>% pivot_wider(names_from=Coordinate,
values_from=c(Group No,value))
tble2 %>% pivot_wider(names_from=Coordinate,
values_from=c(`Group No`,value))
tble2 %>% pivot_wider(names_from=Coordinate,
values_from=c(value))
tble2 %>% pivot_wider(names_from=Coordinate,
values_from=c(value)) %>%
unnest_longer()
tble2 %>% pivot_wider(names_from=Coordinate,
values_from=c(value)) %>%
unnest_longer(col=c(x,y))
tble2 %>%
group_by(`Group No`) %>%
mutate(row_no = row_number()) %>%
pivot_wider(names_from=Coordinate,
values_from=c(value))
?fill
tble2 %>%
group_by(`Group No`) %>%
mutate(row_no = row_number()) %>%
pivot_wider(names_from=Coordinate,
values_from=c(value)) %>%
fill(c(x,y), .direction=c('down', 'up'))
tble2 %>%
group_by(`Group No`) %>%
mutate(row_no = row_number()) %>%
pivot_wider(names_from=Coordinate,
values_from=c(value)) %>%
fill(c(x,y), .direction=c('downup'))
tble2 %>%
group_by(`Group No`) %>%
mutate(row_no = row_number()) %>%
pivot_wider(names_from=Coordinate,
values_from=c(value)) %>%
fill(c(x,y), .direction=c('downup')) %>%
select(-row_no) %>%
distinct()
tble2 %>%
group_by(`Group No`) %>%
mutate(row_no = row_number()) %>%
pivot_wider(names_from=Coordinate,
values_from=c(value)) %>%
fill(c(x,y), .direction=c('downup')) %>%
select(-row_no) %>%
distinct() %>%
ggplot(aes(x,y)) +
geom_point() +
facet_wrap(~`Group No`)
datasets::anscombe
tble = datasets::anscombe
datasets::anscombe
for(i in 1:4){
xi=paste0('x', as.character(i))
yi=paste0('y', as.character(i))
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe, aes(x=xi, y=yi)) + geom_point()
)
}
(p1 + p2)/(p3 + p4)
p1
p2
for(i in 1:4){
xi=paste0('x', as.character(i))
yi=paste0('y', as.character(i))
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe, aes(x=as.name(xi), y=as.name(yi))) + geom_point()
)
}
library(patchwork)
(p1 + p2)/(p3 + p4)
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe, aes(x='x1', y='y1')) + geom_point()
)
p1
ggplot(anscombe, aes(x='x1', y='y1')) +geom_point()
ggplot(anscombe, aes(x=x1, y=y1)) +geom_point()
as.name('x1')
eval('x1')
get('x1')
for(i in 1:4){
xi=paste0('x', as.character(i))
yi=paste0('y', as.character(i))
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe, aes(x=get(xi), y=get(yi))) + geom_point()
)
}
p1
(p1 + p2)/(p3 + p4)
for(i in 1:4){
xi=paste0('x', as.character(i))
yi=paste0('y', as.character(i))
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe, aes(x=get(xi), y=get(yi))) + geom_point()
)
}
(p1 + p2)/(p3 + p4)
x='x1'
get(x)
anscombe
get(paste0('x', as.character(i)))
for(i in 1:4){
x = paste0('p', as.character(i)),
value = ggplot(anscombe,
aes(x=get(paste0('x', as.character(i))),
y=get(paste0('y', as.character(i)))) + geom_point()
)
}
for(i in 1:4){
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe,
aes(x=get(paste0('x', as.character(i))),
y=get(paste0('y', as.character(i))))) + geom_point()
)
}
(p1 + p2)/(p3 + p4)
ggplot(anscombe, aes(x=get(paste0('x', as.character(1))),
y=get(paste0('y', as.character(1))))) + geom_line()
ggplot(anscombe, aes(x=get(paste0('x', as.character(1))),
y=get(paste0('y', as.character(1))))) + geom_point()
for(i in 1:4){
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe,
aes(x=get(paste0('x', as.character(i))),
y=get(paste0('y', as.character(i))))) + geom_point()
)
}
(p1 + p2)/(p3 + p4)
ggplot(anscombe, aes(x=get(paste0('x', as.character(2))),
y=get(paste0('y', as.character(2))))) + geom_point()
for(i in 1:4){
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe,
aes(x=get(paste0('x', as.character(i))),
y=get(paste0('y', as.character(i))))) + geom_point(),
envir=.GlobalEnv
)
}
(p1 + p2)/(p3 + p4)
for(i in 1:4){
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe,
aes(x=get(paste0('x', as.character(i))),
y=get(paste0('y', as.character(i))))) + geom_point(),
envir=.GlobalEnv
)
get(paste0('p', as.character(i)))
}
print(get(paste0('p', as.character(i))))
for(i in 1:4){
assign(
x = paste0('p', as.character(i)),
value = ggplot(anscombe,
aes(x=get(paste0('x', as.character(i))),
y=get(paste0('y', as.character(i))))) + geom_point(),
envir=.GlobalEnv
)
print(get(paste0('p', as.character(i))))
}
ggplot(anscombe, aes(x=get(paste0('x', as.character(4))),
y=get(paste0('y', as.character(4))))) + geom_point()
?assign
a=1:4
assign('a[1]', 2)
a
a[1]
a[1]== 2
get('a[1]')
for(i in 1:4){
var = paste0('p', as.character(i))
assign(
x = var,
value = ggplot(anscombe,
aes(x=get(paste0('x', as.character(i))),
y=get(paste0('y', as.character(i))))) + geom_point(),
envir=.GlobalEnv
)
}
p1
p2
p3
p4
for(i in 1:4){
var = paste0('p', as.character(i))
assign(
x = var,
value = (ggplot(anscombe,
aes(x=get(paste0('x', as.character(i))),
y=get(paste0('y', as.character(i))))) + geom_point()),
envir=.GlobalEnv
)
}
(p1 + p2)/(p3 + p4)
p4 = ggplot(anscombe, aes(x=get(paste0('x', as.character(4))),
y=get(paste0('y', as.character(4))))) + geom_point()
p3 = ggplot(anscombe, aes(x=get(paste0('x', as.character(3))),
y=get(paste0('y', as.character(3))))) + geom_point()
(p1 + p2)/(p3 + p4)
p1 = ggplot(anscombe, aes(x=get(paste0('x', as.character(1))),
y=get(paste0('y', as.character(1))))) + geom_point()
p3 = ggplot(anscombe, aes(x=get(paste0('x', as.character(3))),
y=get(paste0('y', as.character(3))))) + geom_point()
p1 + p3
reprex::reprex()
(p1 + p2)/(p3 + p4)
source('~/.active-rstudio-document', echo=TRUE)
?patchwork
(p1 + p2)/(p3 + p4) + plot_annotation(title = 'Anscombe Quarted')
(p1 + p2)/(p3 + p4) + plot_annotation(title = 'Anscombe Quarted',
theme = theme(plot.title = element_text(hjust=0.5)))
p1 = ggplot(anscombe, aes(x=x1, y=y1)) + geom_point() + geom_line(stat='lm')
p1 = ggplot(anscombe, aes(x=x1, y=y1)) + geom_point() + geom_smooth(method='lm')
(p1 + p2)/(p3 + p4) + plot_annotation(title = 'Anscombe Quarted',
theme = theme(plot.title = element_text(hjust=0.5)))
?geom_smooth
source('~/.active-rstudio-document', echo=TRUE)
ggplot(anscombe, aes(as.name('x1')))
eval('x1')
eval(as.name('x1'))
ggplot(anscombe, aes(eval(as.name('x1'))))
plot_fn = function(x,y){
ggplot(anscombe, aes(eval(get(x)), eval(get(y)))) +
geom_point(color='orange') +
geom_smooth(method='lm', se=FALSE) +
theme_classic()
}
plot_fn('x1', 'y1')
for(i in 1:4){
xi = paste0('x', as.character(i))
yi = paste0('y', as.character(i))
assign(
x=paste0('p', as.character(i)),
value=plot_fn(xi, yi)
)
}
(p1 + p2)/(p3 + p4) + plot_annotation(title = 'Anscombe Quarted',
theme = theme(plot.title = element_text(hjust=0.5)))
source('~/.active-rstudio-document', echo=TRUE)
getwd()
ggsave('../Desktop/anscombe.jpg', width = 300, height = 180, units = 'mm')
mean(x1)
mean(anscombe$x1)
mean(anscombe$x2)
sapply(anscombe, function(x) mean(anscombe[, x]))
summary(anscombe)
?summary
summary(anscombe[1, 5])
sapply(1:4, function(x) mean(anscombe[x, x+4]))
sapply(1:4, function(x) mean(anscombe[x, x+4, drop=F]))
source('~/.active-rstudio-document', echo=TRUE)
ps = mapply(plot_fn, c('x1', 'x2', 'x3', 'x4'), c('y1', 'y2', 'y3', 'y4'))
ps[[1]]
View(ps)
summary(anscombe)
reprex::reprex()
reprex::reprex(summary(anscombe))
x=carbonate::carbon$new()
x$set_template('cobalt')
x$browse()
anscombe %>%
pivot_longer(cols=everything(),
names_to='names',
values='values')
?pivot_longer
anscombe %>%
pivot_longer(cols=everything(),
names_to='names',
values_to='values')
anscombe %>%
pivot_longer(cols=everything(),
names_to='names',
values_to='values') %>%
group_by(names) %>%
summarise(mean(values))
anscombe %>%
pivot_longer(cols=everything(),
names_to='names',
values_to='values') %>%
group_by(names) %>%
summarise(mean(values), var(values))
anscombe %>%
pivot_longer(cols=everything(),
names_to='names',
values_to='values') %>%
group_by(names) %>%
summarise('mean'=mean(values), 'variance'=var(values))
anscombe %>%
pivot_longer(cols=everything(),
names_to='variables',
values_to='values') %>%
group_by(variables) %>%
summarise('mean'=mean(values), 'variance'=var(values))
reprex::reprex(advertise=F)
library(tidyr)
source('~/.active-rstudio-document', echo=TRUE)
reprex::reprex()
x=carbonate::carbon$new()
x$set_template('cobalt')
x$browse()
?reprex
?gistr
source('~/neha_covid_data.R', echo=TRUE)
mean[1]
reprex::reprex(mean[1], advertise=F)
environment(mean)
source('~/neha_covid_data.R', echo=TRUE)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
square(5)
source('~/.active-rstudio-document', echo=TRUE)
reprex::reprex()
reprex::reprex(advertise=F)
source('~/neha_covid_data.R', echo=TRUE)
T = mtcars
x = c(T, T, F, F, T)
x[which(x)]
y[which(y)]
y = c(TRUE, TRUE, FALSE, FALSE, TRUE)
y[which(y)]
x[1]
x[2]
x
mean(mtcars, na.rm = T)
TRUE = 'x'
reprex::reprex({TRUE = mtcars})
reprex::reprex({T = mtcars}, advertise =F)
reprex::reprex({T=mtcars
mean(mtcars, na.rm = T)})
reprex::reprex({T=mtcars
mean(mtcars, na.rm = T)}, advertise=F)
reprex::reprex({x=ordered(1:10)
class(x)})
reprex::reprex(advertise=F)
reprex::reprex({x = ordered(1:10)
class(x)},advertise=F)
reprex::reprex(advertise=F)
for(i in 1:length(x)) print(x)
source('~/.active-rstudio-document', echo=TRUE)
for(i in 1:length(x)) print(x)
for(i in 1:length(x)){
print(x)
}
x
for(i in 1:length(x)){
x
}
source('~/.active-rstudio-document', echo=TRUE)
mean(NULL)
?stop
tst2 <- function(...) stop("dummy error", call. = FALSE)
try(tst2(1:10, longcalling, expression, but.not.seen.in.Error))
tst2 <- function(...) stop("dummy error", call. = TRUE)
try(tst2(1:10, longcalling, expression, but.not.seen.in.Error))
month.name
month.abb
library(lobstr)
install.packages('lobstr')
library(lobstr)
source('~/.active-rstudio-document', echo=TRUE)
y
x = rep(c("1", "2"), 100000000)
source('~/.active-rstudio-document', echo=TRUE)
sapply(1:5, function(x) rnorm(3, x))
rnorm(2)
rnorm(5)
library(compiler)
for(i in 1:NULL) print(1)
source('~/.active-rstudio-document', echo=TRUE)
binom.test(250, (250/6), alternative = 'greater')
binom.test(n=250,p=(250/6), alternative = 'greater')
binom.test(x=51,n=250,p=(250/6), alternative = 'greater')
binom.test(x=51,n=250,p=(1/6), alternative = 'greater')
binom.test(x=51,n=240,p=(1/6), alternative = 'greater')
binom.test(x=51,n=180,p=(1/6), alternative = 'greater')
250*1/6
binom.test(x=51,n=250,p=(1/6), alternative = 'greater')
250/6
binom.test(51,235,1/6, 'greater')
reprex::reprex({binom.test(x=51, n=250, p=1/6, alternative='greater')})
reprex::reprex({binom.test(x=51, n=250, p=1/6, alternative='greater')}, advertise = F)
x=carbonate::carbon$new()
x$set_template('cobalt')
x$browse()
source('~/.active-rstudio-document', echo=TRUE)
cars
cars `::`(magrittr, `%>%`) select(city)
`::`(magrittr, `%>%`)
`::`(magrittr, `%>%`)(cars, select(city))
`::`(magrittr, `%>%`)(select(city))
`::`(magrittr, `%>%`)(cars)
`::`(magrittr, `%>%`)(cars, select(., city))
`::`(magrittr, `%>%`)
`::`(magrittr, `%>%`)(select(city), cars)
cars `::`(magrittr, `%>%`) select(city)
`::`(magrittr, `%>%`) (cars, select(cars, city))
magrittr:::split_chain()
magrittr:::split_chain
`::`(magrittr, `%>%`) ()
`::`(magrittr, `%>%`) (1, sum(2))
1 %>% sum(2)
1 magrittr::`%>%` sum(2)
magrittr::`%>%`(1,2)
(cars) `::`(magrittr, `%>%`) (select(city))
(cars)`::`(magrittr, `%>%`) (select(city))
install.packages('dplyr')
binom.test(2,8)
0.2891/2
binom.test(2, 8, alternative = 'greater')
binom.test(2, 8, alternative = 'less')
?binom.test
binom.test(13, 16, 0.5, alternative = 'less')
binom.test(13, 16, 0.5, alternative = 'greater')
binom.test(3, 16, 0.5, alternative = 'less')
?C
combn(13,16)*0.5^16
combn(16,13)*0.5^16
combn(16,13)
choose(16,13)*0.5^16
?binom
?binomial
?pbinom
dbinom(13,16, 0.5)
sum(unlist(lapply(13:16, function(x) dbinom(x, 16, 0.5))))
?list
binom.test(13,16,0.5)
reprex::reprex({binom.test(x=13, n=16, p=0.5)}, advertise = F)
x = carbonate::carbon$new()
x$set_template('cobalt')
x$browse()
binom.test(13,16,1/6, alt = 'greater')
binom.test(10, 200)
binom.test(132, 200, alt = 'greater' )
binom.test(140, 200, alt = 'greater' )
binom.test(10, 200, alt = 'greater' )
binom.test(80, 200, alt = 'greater' )
binom.test(100, 200, alt = 'greater' )
binom.test(110, 200, alt = 'greater' )
plot(dbinom(1:200, 200))
plot(dbinom(1:200, 200, 0.5))
?plot
binom.test(120, 200, alt = 'greater' )
binom.test(115, 200, alt = 'greater' )
binom.test(115, 200 )
source('~/.active-rstudio-document', echo=TRUE)
reprex::reprex(advertise=FALSE)
z=carbonate::carbon$new()
z$set_template('cobalt')
z$browse()
reprex::reprex(advertise=F)
z=carbone::carbon$new()
z=carbonate::carbon$new()
z$set_template('cobalt')
z$browse()
reprex::reprex(advertise=F)
z=carbonate::carbon$new()
z$set_template('cobalt')
z$browse()
reprex::reprex(advertise=F)
z=carbonate::carbon$new()
z$set_template('cobalt')
z$browse()
reprex::reprex(advertise=F)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('ggthemr')
devtools::install_github('cttobin/ggthemr')
library(tidyverse)
library(latex2exp)
x0 = seq(-8,8, length=200)
unif = function(y, x=x0) dunif(x, min=y[[1]], max=y[[2]])
temp_list = list(c(-6,-2), c(-1,3), c(3.5,7.5))
y = lapply(temp_list, unif)
y[[4]] = x0
df = do.call(cbind.data.frame, y)
colnames(df) = c('first', 'second', 'third', 'x')
df = gather(df,-x, key='unif_dist', value='unif')
cols = c('first'='black', 'second'='orange', 'third'='green')
ggplot(df, aes(x = x, y=unif)) +
ylim(c(0,0.5)) +
geom_line(aes(col=unif_dist), show.legend = FALSE) +
geom_area(aes(fill=unif_dist),alpha=0.2) +
labs(y= 'Probability Density', x='X', title= 'PDFs', fill='distribution') +
scale_fill_manual(values = cols,
breaks = c('first', 'second', 'third'),
labels = c('d1', 'd2', 'd3')) +
scale_color_manual(values = cols)
setwd('../GitHub/dsqad_db/questions/scripts')
source('C:/Users/mohit/GitHub/dsqad_db/questions/scripts/q_23092020.R', echo=TRUE)

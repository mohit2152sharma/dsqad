y['b'] = list(NULL)
y
z[['b']] = NULL
z
l[['b']] = list(NULL)
l}, advertise=F))
z$get_templates()
z$set_template('zenburn')
z$browse()
c(2,3) * c(2,2)
z = c(1,1)*!(c(T,F)+c(2,2)*c(T,F))
z
library(magrittr)
mtcars %T>% str %>% select(cyl) %>% mean
library(dplyr)
mtcars %T>% str %>% select(cyl) %>% mean
mtcars %T>% str %>% select(cyl) %>% mean(.)
mtcars %T>% str %>% select(cyl) %>% mean()
mtcars %T>% str %>% select(cyl) %>% sum
?`%T>%`
source('~/.active-rstudio-document', echo=TRUE)
?`%T>%
`
?`%T>%`
mtcars %T>% plot
mtcars %T>% ggplot(aes(cyl, disp)) + geom_line() %>% sum(cyl)
library(ggplot2)
mtcars %T>% ggplot(aes(cyl, disp)) + geom_line() %>% sum(cyl)
mtcars %T>% ggplot(aes(cyl, disp)) + geom_line() %$% sum(cyl)
mtcars %T>% ggplot(aes(cyl, disp)) + geom_line() %>% sum(.$cyl)
mtcars %T>% ggplot(aes(cyl, disp)) + geom_line() %>% sum(cyl)
mtcars %T>% ggplot(aes(cyl, disp)) + geom_line() %>% str
mtcars %T>% ggplot(aes(cyl, disp)) + geom_line() %>% colSums()
?`%T>%`
mtcars %T>% ggplot(aes(cyl, disp)) + geom_line() %>% print()
mtcars %>% ggplot(aes(cyl, disp)) + geom_line() %>% print()
mtcars %T>% ggplot(aes(cyl, disp)) +
geom_line() %>% str
mtcars %T>% {ggplot(aes(cyl, disp)) +
geom_line()} %>% str
mtcars %T>% {ggplot(.,aes(cyl, disp)) +
geom_line()} %>% str
mtcars %T>% {ggplot(.,aes(cyl, disp)) +
geom_line()} %>% sum(cyl)
mtcars %T>% {ggplot(.,aes(cyl, disp)) +
geom_line()} %>% select(cyl) %>% sum
mtcars %T>% {ggplot(.,aes(cyl, disp)) +
geom_point()} %>% select(cyl) %>% sum
mtcars %T>% {print(ggplot(.,aes(cyl, disp)) +
geom_point())} %>% select(cyl) %>% sum
mtcars %T>% {print(ggplot(.) +
geom_point(aes(cyl, disp)))} %>% select(cyl) %>% sum
reprex::reprex(advertise=F)
library(reprex)
?reprex
reprex::reprex(advertise=F)
update.packages('knitr')
reprex::reprex(advertise=F)
.Last.error.trace
mtcars %T>% {print(ggplot(.) +
geom_point(aes(cyl, disp)))} %>%
select(cyl) %>%
sum
reprex::reprex(advertise=F)
x = carbonate::carbon$new()
x$get_templates()
x$set_template('zenburn')
x$browse()
s = "./FAO_landings_data/Hgammarus_uk.csv"
library(stringr)
str_split(s, "_")
str_split(s, "_")[[1]][4]
str_split(str_split(s, "_")[[1]][4], "."))[[1]][1]
str_split(str_split(s, "_")[[1]][4], ".")[[1]][1]
str_split(str_split(s, "_")[[1]][4], ".")[[1]][2]
str_split(str_split(s, "_")[[1]][4], ".")
str_split(str_split(s, "_")[[1]][4], "\\.")
str_split(str_split(s, "_")[[1]][4], "\\.")[[1]][1]
str_extract(s, "(?<=_).*")
str_extract(s, "(?<=_){3}.*")
str_extract_all(s, "(?<=_).*")
str_extract_all(s, "(?<=_){3}.*")
str_extract_all(s, "(?<=_){3}")
str_extract_all(s, "(?:_){3}")
str_extract_all(s, "(?=_){3}")
str_extract_all(s, "(?=_){3}.*")
str_extract(s, "(?<=_).*")
str_extract(s, "(?<=_){3}.*")
str_extract(s, "(?<=_){1}.*")
str_extract(s, "(?<=_).*")
str_extract(s, "(?<=_){3}")
str_extract(s, "(?<=_)1+")
str_extract(s, "(?<=_)+")
str_extract(s, "(?<=_)")
str_extract(s, "(?<=_).*")
str_extract_all(s, "(?:_){3}.*")
str_extract_all(s, "(?:[^|]*_){3}([^|])*")
str_extract_all(s, "(?:_){3}.*")
str_extract_all(s, "(?:_){3}(.*)")
str_extract_all(s, "(?:_){3}(.)")
str_extract_all(s, "(?:_){3}(.)*")
str_extract_all(s, "^(?:[^|]*_){3}([^|])*")
str_extract_all(s, "^(?:[^_]*_){3}([^_])*")
str_extract_all(s, "^(?:[^\_]*\_){3}([^\_])*")
str_extract_all(s, "^(?:[_]*_){3}([_])*")
str_extract(s, "^(?:[^_]*_){3}")
str_extract(s, "^(?:[^_]*_){3}([^_]*")
str_extract(s, "^(?:[^_]*_){3}([^_])*")
str_extract(s, "^(?:[^_]*_){4}([^_])*")
str_extract(s, "^(?:[^_]*_){4}*")
str_extract(s, "^(?:[^_]*_){4}")
str_extract(s, "^(?:[^_]*_){2}")
str_extract(s, "^(?:[^_]*_){1}")
str_extract(s, "^(?:[^_]*_){0}")
str_extract(s, "^(?:[^_]*_){4}")
str_extract(s, "^(?:[^_]*_){3}")
str_extract(s, "^(?<=[^_]*_){3}")
str_extract(s, "^(?<=[^_]*_){3}.*")
str_extract(s, "^(?<=[^_]*_){3}(.)*")
str_extract(s, "^(?<=[^_]*_){2}(.)*")
str_extract(s, "^(?:[^_]*_){2}")
str_extract(s, "^(?:[^_]*_){3}")
str_extract(s, "^(?<=[^_]*_){1,3}")
str_extract(s, "^(?<=[^_]*_){1,3}.*")
str_extract(s, "^(?:[^_]*_){3}")
library(magrittr)
library(dplyr)
?`%<>%`
x = seq(-3,3)
x %<>% abs %<>% sqrt
x %<>% abs %<>% ex
power(2)
x %<>% abs %<>% exp
x = seq(-3,3)
x %<>% abs %<>% exp
x
reprex::reprex(advertise=F)
y=carbonate::carbon$new()
y$set_template('zenburn')
y$browse()
x = seq(-3,3)
x
x %<>% abs %>% exp
x
reprex::reprex(advertise=F)
y=carbonate::carbon$new()
y$set_template('zenburn')
y$browse()
source('~/.active-rstudio-document', echo=TRUE)
tmp = data.frame(x=rep(NA, 50), y=seq(1,50))
ggplot2::ggplot(tmp, aes(x,y)) + ggplot2::geom_line()
library(ggplot2)
ggplot2::ggplot(tmp, aes(x,y)) + ggplot2::geom_line()
mean('NA')
?example
example(rnorm)
example(quantile)
example(example)
example(base::acos())
example(acos)
example(sqrt)
reprex::reprex({example(sqrt)}, advertise=F)
reprex::reprex({example(sum)}, advertise=F)
x^0
source('~/.active-rstudio-document', echo=TRUE)
y^0
?y
y = 'NA'
y
y = NA
y
y^0
x = y
x^0
y^o
str(mtcars)
anova(lm(hp ~ drat + wt, data=mtcars))
anova(lm(hp ~ wt + drat, data=mtcars))
anova(lm(hp ~ 1, data=mtcars))
?anova
anova(lm(hp ~ 1, data=mtcars), lm(hp ~ wt, data=mtcars), lm(hp~ wt-1, data=mtcars))
anova(lm(hp ~ 1, data=mtcars))
anova(lm(hp ~ wt, data=mtcars))
anova(lm(hp ~ wt-1, data=mtcars))
drop1(lm(hp ~ wt + drat, data=mtcars))
m1 = lm(hp ~ wt + drat, data=mtcars)
m2 = lm(hp ~ drat + wt, data=mtcars)
anova(m1, m2)
?drop1
r = rnorm(50)
a = rnorm(50)
b = rnorm(50)
m1 = lm(r ~ a + b)
m2 = lm(r ~ b + a)
anova(m1)
anova(m2)
anova(lm(r~a))
anova(lm(r~b))
anova(lm(r~1))
(.93273+.00383)/2
anova(lm(r~1 + a))
anova(lm(r~1+a))
anova(m1)
anova(m2)
anova(lm(r~a))
anova(lm(r~b))
drop1(m2)
drop1(m1)
summary(lm(r~ a + 0))
summary(lm(r ~a-1))
summary(lm(r~0+a))
reprex::reprex(advertise=F)
y=carbonate::carbon$new()
y$set_template('cobalt')
y$browse()
reprex::reprex({anova(model_a)
anova(model_b)}, advertise=F)
y$browse()
reprex::reprex(advertise=F)
y=carbonate::carbon$new()
y$set_template('cobalt')
y$browse()
a <- c(1:50) + rnorm(50, sd = 5)
b <- sort(rexp(50))
# Look at the data:
plot(a, b)
# A: What happens now?
plot(a, log(b))
# Look at the data:
plot(a, b)
?rexp
# Look at the data:
plot(a, b)
# A: What happens now?
plot(a, log(b))
# B: And now?
plot(a, log2(b))
# C: And now?
plot(a, log10(b))
?log
# Look at the data:
par(mfrow=c(2,2))
plot(a, b)
# A: What happens now?
plot(a, log(b))
# B: And now?
plot(a, log2(b))
# C: And now?
plot(a, log10(b))
# Look at the data:
par(mfrow=c(2,2))
plot(a, b)
# A: What happens now?
plot(a, log(b))
# B: And now?
plot(a, log2(b))
# C: And now?
plot(a, log10(b))
?mfrow
?par
a <- c(1:50) + rnorm(50, sd = 5)
b <- sort(rexp(50))
# Look at the data:
par(mfrow=c(2,2))
plot(a, b)
# Look at the data:
par(mfrow=c(2,2))
plot(a, b)
# Look at the data:
par(mfrow=c(2,2))
plot(a, b)
# A: What happens now?
plot(a, log(b))
# B: And now?
plot(a, log2(b))
# C: And now?
plot(a, log10(b))
par("mar")
# Look at the data:
par(mar = c(1,1,1,1))
par(mfrow=c(2,2))
plot(a, b)
# A: What happens now?
plot(a, log(b))
# B: And now?
plot(a, log2(b))
# C: And now?
plot(a, log10(b))
# Look at the data:
par(mar = c(2,2,2,2))
par(mfrow=c(2,2))
plot(a, b)
# A: What happens now?
plot(a, log(b))
# B: And now?
plot(a, log2(b))
# C: And now?
plot(a, log10(b))
?`&&`
c(T,T) && c(T,F)
c(T,T) & c(T,F)
require(askpass)
require(kdfsfj)
library(rewkrjewf)
paste(c(1,NA))
c(T,F) & NA
c(T, F) | NA
typeof(NULL)
anyNA(NULL)
is.na(NULL)
?any
is.finite(NULL)
typeof(NA)
reprex::reprex({typeof(NA)}, advertise=F)
??NA
?NA
c(TRUE, FALSE) & c(NA, NA)
c(TRUE, FALSE) | c(NA, NA)
?NA
reprex::reprex({c(TRUE, FALSE) & c(NA, NA)}, advertise=F)
y=carbonate::carbon$new()
y$set_template('cobalt')
y$browse()
c(TRUE, FALSE) | c(NA, NA)
reprex::reprex({c(TRUE, FALSE) | c(NA, NA)}, advertise=F)
y=carbonate::carbon$new()
y$set_template('cobalt')
y$browse()
i %+=% 1
?`%%`
(-8)^1/3
(-8)^(1/3)
(-2)^3
1 %/% 0.2
is.numeric(2L)
?as.numeric
x = 1
mode(x) = 'character'
x = 1
mode(x) = 'factor'
is.numeric(x)
as.numeric(c("-.1"," 2.7 ","B"))
1/3
-8^0.34
-8^0.33
-8^0.33333333333333333333333333333333333
require(dplyr)
require(abc)
x = require(abch)
x
y = library(tidyr)
print(y)
?library
typeof(require(xyz))
reprex::reprex({x = require(xyz)
typeof(x)}, advertise=FALSE)
y = carbonate::carbon$new()
y$set_template('cobalt')
y$browse()
?attach
?c
?factor
factor(c(1,2,2,NA))
factor(c(1,2,2,NA), exclude=NULL)
(ff <- factor(substring("statistics", 1:10, 1:10), levels = letters))
?substring
substring('mohit')
?factor
f. = factor(ff)
f.. = factor(ff, drop=FALSE)
f.. = ff[, drop=FALSE]
f = factor(letters)
f[1]
x = factor(5:10)
as.numeric(x)
as.numeric(levels(f))[f]
as.numeric(levels(x))[x]
as.numeric(as.character(x))
x = factor(3:5)
as.numeric(x)
x
x = factor(c(TRUE, FALSE, TRUE), levels = c(TRUE, FALSE))
x
as.numeric(x)
x = factor(c(TRUE, FALSE, TRUE), levels = c(TRUE, FALSE))
ff
levels(ff)
as.numeric(levels)
as.numeric(ff)
x = factor(seq(100, 1000000))
library(reprex)
library(carbonate)
reprex({x = factor(100:10000)
microbenchmark::microbenchmark(
as.numeric(as.character(x))
as.numeric(levels(x))[x]
)}, advertise=FALSE)
reprex({x = factor(100:10000)
microbenchmark::microbenchmark(
as.numeric(as.character(x))
as.numeric(levels(x))[x]
)}, advertise=FALSE)
reprex({x = factor(100:10000)
microbenchmark::microbenchmark(
as.numeric(as.character(x))
as.numeric(levels(x))[x]
)}, advertise=FALSE)
reprex({x = factor(100:10000);
microbenchmark::microbenchmark(
as.numeric(as.character(x))
as.numeric(levels(x))[x]
);}, advertise=FALSE)
reprex({x = factor(100:10000)
microbenchmark::microbenchmark(
as.numeric(as.character(x)),
as.numeric(levels(x))[x]
)}, advertise=FALSE)
reprex({x = factor(100:1000000)
microbenchmark::microbenchmark(
as.numeric(as.character(x)),
as.numeric(levels(x))[x]
)}, advertise=FALSE)
y = carbon$new()
y$get_templates()
y$set_template('zenburn')
y$browse()
reprex({x = factor(3:5)
as.numeric(x)}, advertise=FALSE)
y = carbon$new()
y$get_templates()
y$set_template('zenburn')
y$browse()
reprex({x = factor(c('a', 'a', 'b', NA))
x}, advertise=FALSE)
reprex({x = factor(c(1, 1, 2, NA))
x}, advertise=FALSE)
factor(c(1,NA), levels = c(1, NA))
factor(c(1,1,2,"NA"))
factor(c(1,1,2,"NA")) -> x
as.numeric(x)
factor(c(1,NA))
factor(c(1,NA))->x
addNA(x)
x
factor(c(1,NA), exclude = c("1"))->x
x
factor(c(1,NA), exclude = c(1))->x
x
factor(letters, exclude=c('a', 'b'))
factor(letters, exclude=c('A'))
reprex({x = factor(c(1,1,2,NA), exclude=NULL)
x}, advertise=FALSE)
y=carbon$new()
y$set_template('zenburn')
y$browse()
?`[`
?names
?NULL
as.null(list(a=1))
logical(0)
is.null(list)
list
list()
?NULL
as.character(y~a+b)
as.character(11/99)
form = y ~ a+b
deparse(form)
as.character(form)
a = ""
b = character(0)
length(a)
length(b)
typeof(form)
e = quote(`foo bar`)
e
deparse(e)
deparse(e, backtick = T)
deparse(e,control=all)
e = `foo bar` + 1
e = quote(`foo bar` + 1)
deparse(e, control = 'all')
deparse(e)
?capture.output
x = expression(y ~ a+b)
as.character(x)
as.character(list(1,2,4))
as.character(list(a=1, b=3))
as.list(form)
typeof(form)
call('sum', 1+2)
as.character(call('sum', 1+2))
as.character(c('1'))
rm(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
x = y ~ a + b
reprex::reprex(advertise=F)
y = carbonate::carbon$new()
y$set_template('zenburn')
y$browse()
library(ggplot2)
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = "blue"))
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = "blue")
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = "blue"))
setwd("C:/Users/mohit/GitHub/dsqad_db/questions/scripts")
library(ggplot2)
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = "blue"))
ggsave('../../images/questions/q_10112020.png', width = 300, height = 180, units = 'mm')
library(ggplot2)
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = "blue")
ggsave('../../images/answers/a_10112020.png', width = 300, height = 180, units = 'mm')
